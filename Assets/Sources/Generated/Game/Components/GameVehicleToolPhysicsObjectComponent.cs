//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VehicleToolPhysicsObjectComponent vehicleToolPhysicsObject { get { return (VehicleToolPhysicsObjectComponent)GetComponent(GameComponentsLookup.VehicleToolPhysicsObject); } }
    public bool hasVehicleToolPhysicsObject { get { return HasComponent(GameComponentsLookup.VehicleToolPhysicsObject); } }

    public void AddVehicleToolPhysicsObject(VehicleTool newType) {
        var index = GameComponentsLookup.VehicleToolPhysicsObject;
        var component = CreateComponent<VehicleToolPhysicsObjectComponent>(index);
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceVehicleToolPhysicsObject(VehicleTool newType) {
        var index = GameComponentsLookup.VehicleToolPhysicsObject;
        var component = CreateComponent<VehicleToolPhysicsObjectComponent>(index);
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveVehicleToolPhysicsObject() {
        RemoveComponent(GameComponentsLookup.VehicleToolPhysicsObject);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVehicleToolPhysicsObject;

    public static Entitas.IMatcher<GameEntity> VehicleToolPhysicsObject {
        get {
            if (_matcherVehicleToolPhysicsObject == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VehicleToolPhysicsObject);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVehicleToolPhysicsObject = matcher;
            }

            return _matcherVehicleToolPhysicsObject;
        }
    }
}
